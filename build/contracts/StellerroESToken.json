{
  "contractName": "StellerroESToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isKYCAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceKYCAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addKYClisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceKYClisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeKYClisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approveAndMint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addKYCAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isKYClisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "investorAddress",
          "type": "address"
        }
      ],
      "name": "isFreeInvestor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        }
      ],
      "name": "restoreTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeKYCAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Restore",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYClistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYClistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYCAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYCAdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isKYCAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceKYCAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addKYClisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceKYClisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeKYClisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndMint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addKYCAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isKYClisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"investorAddress\",\"type\":\"address\"}],\"name\":\"isFreeInvestor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"restoreTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeKYCAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"cap\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Restore\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"KYClistedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"KYClistedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"KYCAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"KYCAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addKYCAdmin(address)\":{\"params\":{\"account\":\"the address to add\"}},\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"value\":\"The amount of token to be burned.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns a specific amount of tokens from the target address and decrements allowance\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"value\":\"uint256 The amount of token to be burned\"}},\"cap()\":{\"return\":\"the cap for the token minting.\"},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens.\",\"return\":\"True if the operation was successful.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"isFreeInvestor(address)\":{\"params\":{\"investorAddress\":\"the investor address\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"name()\":{\"return\":\"the name of the token.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"removeKYCAdmin(address)\":{\"params\":{\"account\":\"the address to remove\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"restoreTokens(address,address)\":{\"details\":\"restore tokens from one address to another. to use only in case a user cannot access its token.\",\"params\":{\"from\":\"address The old user's address\",\"to\":\"address The new user's address\"}},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"addKYCAdmin(address)\":{\"notice\":\"Add a kyc admin\"},\"isFreeInvestor(address)\":{\"notice\":\"Check if the investor is KYC approved and also accredited\"},\"removeKYCAdmin(address)\":{\"notice\":\"Remove a kyc admin\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/StellerroESToken.sol\":\"StellerroESToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/KYCAdminRole.sol\":{\"keccak256\":\"0x54df1c508c3a0b5543577ddabc534d8495f36cca859ee5d2af86d95ee4eba0a4\",\"urls\":[\"bzzr://e29ba87224622ba0f71fa2c61cc3e939b5a1e0868726ff0cd9de1b5ad5d51b09\"]},\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/KYCListedRole.sol\":{\"keccak256\":\"0xeae32e53faf8fde88f4f3a9b8511ab6637f78163e434174dda1c35abf91870a1\",\"urls\":[\"bzzr://286385385f836232332110887adbc2e5ee3de805bd0302979ef64126c9ea76db\"]},\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/StellerroESToken.sol\":{\"keccak256\":\"0xc6c964e7d8c3007d0fda17d0d517d0d813a81f872cce0c8c621b2377c6c22170\",\"urls\":[\"bzzr://0f28fa2d59869ff704d7cf8b44b60ab1baddbf6e63f5142797d1172c9b009803\"]},\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/WhiteListToken.sol\":{\"keccak256\":\"0x92c87949f6424635eae130242876c79bd43e3e952b35e69b471696ff93ddb685\",\"urls\":[\"bzzr://0a16c04af66903bb252c04a2cc3fc643f56546c65d830272ff1484edc437211b\"]},\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/WhiteListTokenAccess.sol\":{\"keccak256\":\"0xe9a2cc3b9048b3d4c7c355f24cc8d64d45cd4afbd5d36ac17745dce941349374\",\"urls\":[\"bzzr://59ee6cff242914e223f2868f9c1124880009a67fcab723e9a1219754ad26c501\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzzr://f704341d520fbc98716541f1b3f67737f0ee6e94adf072a66acb2bd25d593c2b\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x3199053db04cdae6c9b4380921a4a4ee720b568d6a9660883b29d25fbec31bc0\",\"urls\":[\"bzzr://d06d25f7b57bff1dcb88c5aa476f4037179e6f364b18a89935c11945a857fb18\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa3e68fd7f987c8fbdaf4867d428a69a15f3cf2f69709a5b0a0fbef750b0e6fbc\",\"urls\":[\"bzzr://f4ebb7c5b9e429b98b07e2caca6156c13c3724e9b1191cca8423ab8427bc6265\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Capped.sol\":{\"keccak256\":\"0x0d305430adb06491d743bba706db45cf79f6c10ef26ca09209549d13fd169182\",\"urls\":[\"bzzr://5aa0d905b7606726318d0e8a0168640098f8b6845a7f4c7bf7d424ecbc753294\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xe195405e9993d575173cdb5dd408db7459a026b9a98085c1a3b676f020f46584\",\"urls\":[\"bzzr://4463a0d4f49767f59c02f2a987b90d48e0d31b3ed3424f3e743496f102f96044\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xc4ca2883e0b0743604143952024c250bb13737ad54bb666b117efdcb766fe3a8\",\"urls\":[\"bzzr://6a7d33fd3907230f8af9f865fc802ab3099a1e4c10ad4efca35edadc96efcd3d\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x60806040526008805460ff191690553480156200001b57600080fd5b506040516200197c3803806200197c833981018060405260808110156200004157600080fd5b8151602083018051919392830192916401000000008111156200006357600080fd5b820160208101848111156200007757600080fd5b81516401000000008111828201871017156200009257600080fd5b50509291906020018051640100000000811115620000af57600080fd5b82016020810184811115620000c357600080fd5b8151640100000000811182820187101715620000de57600080fd5b5050602090910151600080546001600160a01b0319163317808255604051939550919350859285928592899283926001600160a01b031691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36200014d33620001bd60201b60201c565b6200015e336200020f60201b60201c565b600081116200016c57600080fd5b60075550825162000185906009906020860190620002ed565b5081516200019b90600a906020850190620002ed565b50600b805460ff191660ff929092169190911790555062000392945050505050565b620001d88160016200026160201b6200127b1790919060201c565b6040516001600160a01b038216907f6ef188d34b8fac4126790bd81059831348a92504fa4f99a97c9958a1749c63bc90600090a250565b6200022a8160066200026160201b6200127b1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6001600160a01b0381166200027557600080fd5b620002878282620002b760201b60201c565b156200029257600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620002cd57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033057805160ff191683800117855562000360565b8280016001018555821562000360579182015b828111156200036057825182559160200191906001019062000343565b506200036e92915062000372565b5090565b6200038f91905b808211156200036e576000815560010162000379565b90565b6115da80620003a26000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806379cc679011610125578063a2d5027a116100ad578063c2282f771161007c578063c2282f7714610604578063c6416f4c1461062a578063d92a6cf614610658578063dd62ed3e1461067e578063f2fde38b146106ac57610211565b8063a2d5027a14610560578063a457c2d714610586578063a9059cbb146105b2578063aa271e1a146105de57610211565b80638f32d59b116100f45780638f32d59b146104fc5780638fd600041461050457806395d89b411461052a578063983b2d5614610532578063986502751461055857610211565b806379cc6790146104785780637d64bcb4146104a45780638aa0ddc8146104ac5780638da5cb5b146104d857610211565b8063313ce567116101a857806342966c681161017757806342966c68146103ff5780635b4e3f3d1461041c57806370a0823114610424578063715018a61461044a5780637696f4161461045257610211565b8063313ce56714610381578063355274ea1461039f57806339509351146103a757806340c10f19146103d357610211565b80631548dbc8116101e45780631548dbc81461030157806318160ddd1461030b57806323b872dd146103255780632c1019221461035b57610211565b806305d2035b1461021657806306fdde0314610232578063095ea7b3146102af57806312f25343146102db575b600080fd5b61021e6106d2565b604080519115158252519081900360200190f35b61023a6106db565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027457818101518382015260200161025c565b50505050905090810190601f1680156102a15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61021e600480360360408110156102c557600080fd5b506001600160a01b038135169060200135610771565b61021e600480360360208110156102f157600080fd5b50356001600160a01b03166107db565b6103096107f4565b005b6103136107ff565b60408051918252519081900360200190f35b61021e6004803603606081101561033b57600080fd5b506001600160a01b03813581169160208101359091169060400135610805565b6103096004803603602081101561037157600080fd5b50356001600160a01b03166108b8565b6103896108d6565b6040805160ff9092168252519081900360200190f35b6103136108df565b61021e600480360360408110156103bd57600080fd5b506001600160a01b0381351690602001356108e5565b61021e600480360360408110156103e957600080fd5b506001600160a01b038135169060200135610981565b6103096004803603602081101561041557600080fd5b50356109b9565b6103096109d3565b6103136004803603602081101561043a57600080fd5b50356001600160a01b03166109dc565b6103096109f7565b6103096004803603602081101561046857600080fd5b50356001600160a01b0316610a52565b6103096004803603604081101561048e57600080fd5b506001600160a01b038135169060200135610a6d565b61021e610a8c565b61021e600480360360408110156104c257600080fd5b506001600160a01b038135169060200135610aeb565b6104e0610b18565b604080516001600160a01b039092168252519081900360200190f35b61021e610b27565b6103096004803603602081101561051a57600080fd5b50356001600160a01b0316610b38565b61023a610b52565b6103096004803603602081101561054857600080fd5b50356001600160a01b0316610bb3565b610309610bce565b61021e6004803603602081101561057657600080fd5b50356001600160a01b0316610bd7565b61021e6004803603604081101561059c57600080fd5b506001600160a01b038135169060200135610bea565b61021e600480360360408110156105c857600080fd5b506001600160a01b038135169060200135610c33565b61021e600480360360208110156105f457600080fd5b50356001600160a01b0316610ce4565b61021e6004803603602081101561061a57600080fd5b50356001600160a01b0316610cf7565b61021e6004803603604081101561064057600080fd5b506001600160a01b0381358116916020013516610d02565b6103096004803603602081101561066e57600080fd5b50356001600160a01b0316610dab565b6103136004803603604081101561069457600080fd5b506001600160a01b0381358116916020013516610dc5565b610309600480360360208110156106c257600080fd5b50356001600160a01b0316610df0565b60085460ff1681565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107675780601f1061073c57610100808354040283529160200191610767565b820191906000526020600020905b81548152906001019060200180831161074a57829003601f168201915b5050505050905090565b60006001600160a01b03831661078657600080fd5b3360008181526004602090815260408083206001600160a01b038816808552908352928190208690558051868152905192939260008051602061158f833981519152929181900390910190a350600192915050565b60006107ee60018363ffffffff610e0a16565b92915050565b6107fd33610e3f565b565b60055490565b60085460009060ff1661081757600080fd5b61082083610e87565b61085e57604051600160e51b62461bcd0281526004018080602001828103825260258152602001806115436025913960400191505060405180910390fd5b61086784610e87565b6108a557604051600160e51b62461bcd0281526004018080602001828103825260278152602001806115686027913960400191505060405180910390fd5b6108b0848484610e92565b949350505050565b6108c1336107db565b6108ca57600080fd5b6108d381610f49565b50565b600b5460ff1690565b60075490565b60006001600160a01b0383166108fa57600080fd5b3360009081526004602090815260408083206001600160a01b038716845290915290205461092e908363ffffffff610f9116565b3360008181526004602090815260408083206001600160a01b03891680855290835292819020859055805194855251919360008051602061158f833981519152929081900390910190a350600192915050565b600061098c33610ce4565b61099557600080fd5b60085460ff16156109a557600080fd5b6109af8383610fa3565b5060019392505050565b6109c1610b27565b6109ca57600080fd5b6108d381610fca565b6107fd33610fd4565b6001600160a01b031660009081526003602052604090205490565b6109ff610b27565b610a0857600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610a5b336107db565b610a6457600080fd5b6108d381610fd4565b610a75610b27565b610a7e57600080fd5b610a88828261101c565b5050565b6000610a96610b27565b610a9f57600080fd5b60085460ff1615610aaf57600080fd5b6008805460ff191660011790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b6000610af633610ce4565b610aff57600080fd5b60085460ff1615610b0f57600080fd5b6109a5836108b8565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610b40610b27565b610b4957600080fd5b6108d381611026565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107675780601f1061073c57610100808354040283529160200191610767565b610bbc33610ce4565b610bc557600080fd5b6108d381611041565b6107fd33611089565b60006107ee60028363ffffffff610e0a16565b60006001600160a01b038316610bff57600080fd5b3360009081526004602090815260408083206001600160a01b038716845290915290205461092e908363ffffffff6110d116565b60085460009060ff16610c4557600080fd5b610c4e83610e87565b610c8c57604051600160e51b62461bcd0281526004018080602001828103825260258152602001806115436025913960400191505060405180910390fd5b610c9533610e87565b610cd357604051600160e51b62461bcd0281526004018080602001828103825260278152602001806115686027913960400191505060405180910390fd5b610cdd83836110e6565b9392505050565b60006107ee60068363ffffffff610e0a16565b60006107ee82610bd7565b6000610d0c610b27565b610d1557600080fd5b6001600160a01b038216610d2857600080fd5b610d3182610bd7565b610d3e57610d3e826108b8565b6000610d49846109dc565b9050610d568484836110ef565b826001600160a01b0316846001600160a01b03167f8d517738b620ddd4757b2c72628ad2ee2e182d8eadaceb727477e0b661e0afad836040518082815260200191505060405180910390a35060019392505050565b610db3610b27565b610dbc57600080fd5b6108d3816111bc565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610df8610b27565b610e0157600080fd5b6108d3816111c5565b60006001600160a01b038216610e1f57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610e5060018263ffffffff61123316565b6040516001600160a01b038216907fe989c3ea74e8447b86355ca10e7b910a5ea9931330517c33e3002727f5e95ee890600090a250565b60006107ee82610cf7565b6001600160a01b0383166000908152600460209081526040808320338452909152812054610ec6908363ffffffff6110d116565b6001600160a01b0385166000908152600460209081526040808320338452909152902055610ef58484846110ef565b6001600160a01b03841660008181526004602090815260408083203380855290835292819020548151908152905192939260008051602061158f833981519152929181900390910190a35060019392505050565b610f5a60028263ffffffff61127b16565b6040516001600160a01b038216907f5a85c934d044d4af54e45ef3efa70919b2301fe806a7b570e09d7e0f90a4445a90600090a250565b600082820183811015610cdd57600080fd5b6000610fae33610ce4565b610fb757600080fd5b610fc183836112c7565b50600192915050565b6108d333826112f7565b610fe560028263ffffffff61123316565b6040516001600160a01b038216907fbc6a411073357cff5bee0c71e7722c8fd47b5a40591adcedeaac84bd10c0736890600090a250565b610a8882826113a0565b61102f336107db565b61103857600080fd5b6108d381611450565b61105260068263ffffffff61127b16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61109a60068263ffffffff61123316565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000828211156110e057600080fd5b50900390565b6000610fc13384845b6001600160a01b03821661110257600080fd5b6001600160a01b03831660009081526003602052604090205461112b908263ffffffff6110d116565b6001600160a01b038085166000908152600360205260408082209390935590841681522054611160908263ffffffff610f9116565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6108d381610e3f565b6001600160a01b0381166111d857600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811661124657600080fd5b6112508282610e0a565b61125957600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b03811661128e57600080fd5b6112988282610e0a565b156112a257600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6007546112e2826112d66107ff565b9063ffffffff610f9116565b11156112ed57600080fd5b610a888282611498565b6001600160a01b03821661130a57600080fd5b60055461131d908263ffffffff6110d116565b6005556001600160a01b038216600090815260036020526040902054611349908263ffffffff6110d116565b6001600160a01b0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b03821660009081526004602090815260408083203384529091529020546113d4908263ffffffff6110d116565b6001600160a01b038316600090815260046020908152604080832033845290915290205561140282826112f7565b6001600160a01b03821660008181526004602090815260408083203380855290835292819020548151908152905192939260008051602061158f833981519152929181900390910190a35050565b61146160018263ffffffff61127b16565b6040516001600160a01b038216907f6ef188d34b8fac4126790bd81059831348a92504fa4f99a97c9958a1749c63bc90600090a250565b6001600160a01b0382166114ab57600080fd5b6005546114be908263ffffffff610f9116565b6005556001600160a01b0382166000908152600360205260409020546114ea908263ffffffff610f9116565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe427579696e6720696e766573746f72206973206e6f7420616c6c6f77656420746f2062757953656c6c696e6720696e766573746f72206973206e6f7420616c6c6f77656420746f2073656c6c8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820beddef2eb38bb6a8006983b9f8d9a2fc31847aa416dccc126b3cd571efe9732f0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102115760003560e01c806379cc679011610125578063a2d5027a116100ad578063c2282f771161007c578063c2282f7714610604578063c6416f4c1461062a578063d92a6cf614610658578063dd62ed3e1461067e578063f2fde38b146106ac57610211565b8063a2d5027a14610560578063a457c2d714610586578063a9059cbb146105b2578063aa271e1a146105de57610211565b80638f32d59b116100f45780638f32d59b146104fc5780638fd600041461050457806395d89b411461052a578063983b2d5614610532578063986502751461055857610211565b806379cc6790146104785780637d64bcb4146104a45780638aa0ddc8146104ac5780638da5cb5b146104d857610211565b8063313ce567116101a857806342966c681161017757806342966c68146103ff5780635b4e3f3d1461041c57806370a0823114610424578063715018a61461044a5780637696f4161461045257610211565b8063313ce56714610381578063355274ea1461039f57806339509351146103a757806340c10f19146103d357610211565b80631548dbc8116101e45780631548dbc81461030157806318160ddd1461030b57806323b872dd146103255780632c1019221461035b57610211565b806305d2035b1461021657806306fdde0314610232578063095ea7b3146102af57806312f25343146102db575b600080fd5b61021e6106d2565b604080519115158252519081900360200190f35b61023a6106db565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027457818101518382015260200161025c565b50505050905090810190601f1680156102a15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61021e600480360360408110156102c557600080fd5b506001600160a01b038135169060200135610771565b61021e600480360360208110156102f157600080fd5b50356001600160a01b03166107db565b6103096107f4565b005b6103136107ff565b60408051918252519081900360200190f35b61021e6004803603606081101561033b57600080fd5b506001600160a01b03813581169160208101359091169060400135610805565b6103096004803603602081101561037157600080fd5b50356001600160a01b03166108b8565b6103896108d6565b6040805160ff9092168252519081900360200190f35b6103136108df565b61021e600480360360408110156103bd57600080fd5b506001600160a01b0381351690602001356108e5565b61021e600480360360408110156103e957600080fd5b506001600160a01b038135169060200135610981565b6103096004803603602081101561041557600080fd5b50356109b9565b6103096109d3565b6103136004803603602081101561043a57600080fd5b50356001600160a01b03166109dc565b6103096109f7565b6103096004803603602081101561046857600080fd5b50356001600160a01b0316610a52565b6103096004803603604081101561048e57600080fd5b506001600160a01b038135169060200135610a6d565b61021e610a8c565b61021e600480360360408110156104c257600080fd5b506001600160a01b038135169060200135610aeb565b6104e0610b18565b604080516001600160a01b039092168252519081900360200190f35b61021e610b27565b6103096004803603602081101561051a57600080fd5b50356001600160a01b0316610b38565b61023a610b52565b6103096004803603602081101561054857600080fd5b50356001600160a01b0316610bb3565b610309610bce565b61021e6004803603602081101561057657600080fd5b50356001600160a01b0316610bd7565b61021e6004803603604081101561059c57600080fd5b506001600160a01b038135169060200135610bea565b61021e600480360360408110156105c857600080fd5b506001600160a01b038135169060200135610c33565b61021e600480360360208110156105f457600080fd5b50356001600160a01b0316610ce4565b61021e6004803603602081101561061a57600080fd5b50356001600160a01b0316610cf7565b61021e6004803603604081101561064057600080fd5b506001600160a01b0381358116916020013516610d02565b6103096004803603602081101561066e57600080fd5b50356001600160a01b0316610dab565b6103136004803603604081101561069457600080fd5b506001600160a01b0381358116916020013516610dc5565b610309600480360360208110156106c257600080fd5b50356001600160a01b0316610df0565b60085460ff1681565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107675780601f1061073c57610100808354040283529160200191610767565b820191906000526020600020905b81548152906001019060200180831161074a57829003601f168201915b5050505050905090565b60006001600160a01b03831661078657600080fd5b3360008181526004602090815260408083206001600160a01b038816808552908352928190208690558051868152905192939260008051602061158f833981519152929181900390910190a350600192915050565b60006107ee60018363ffffffff610e0a16565b92915050565b6107fd33610e3f565b565b60055490565b60085460009060ff1661081757600080fd5b61082083610e87565b61085e57604051600160e51b62461bcd0281526004018080602001828103825260258152602001806115436025913960400191505060405180910390fd5b61086784610e87565b6108a557604051600160e51b62461bcd0281526004018080602001828103825260278152602001806115686027913960400191505060405180910390fd5b6108b0848484610e92565b949350505050565b6108c1336107db565b6108ca57600080fd5b6108d381610f49565b50565b600b5460ff1690565b60075490565b60006001600160a01b0383166108fa57600080fd5b3360009081526004602090815260408083206001600160a01b038716845290915290205461092e908363ffffffff610f9116565b3360008181526004602090815260408083206001600160a01b03891680855290835292819020859055805194855251919360008051602061158f833981519152929081900390910190a350600192915050565b600061098c33610ce4565b61099557600080fd5b60085460ff16156109a557600080fd5b6109af8383610fa3565b5060019392505050565b6109c1610b27565b6109ca57600080fd5b6108d381610fca565b6107fd33610fd4565b6001600160a01b031660009081526003602052604090205490565b6109ff610b27565b610a0857600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610a5b336107db565b610a6457600080fd5b6108d381610fd4565b610a75610b27565b610a7e57600080fd5b610a88828261101c565b5050565b6000610a96610b27565b610a9f57600080fd5b60085460ff1615610aaf57600080fd5b6008805460ff191660011790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b6000610af633610ce4565b610aff57600080fd5b60085460ff1615610b0f57600080fd5b6109a5836108b8565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610b40610b27565b610b4957600080fd5b6108d381611026565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107675780601f1061073c57610100808354040283529160200191610767565b610bbc33610ce4565b610bc557600080fd5b6108d381611041565b6107fd33611089565b60006107ee60028363ffffffff610e0a16565b60006001600160a01b038316610bff57600080fd5b3360009081526004602090815260408083206001600160a01b038716845290915290205461092e908363ffffffff6110d116565b60085460009060ff16610c4557600080fd5b610c4e83610e87565b610c8c57604051600160e51b62461bcd0281526004018080602001828103825260258152602001806115436025913960400191505060405180910390fd5b610c9533610e87565b610cd357604051600160e51b62461bcd0281526004018080602001828103825260278152602001806115686027913960400191505060405180910390fd5b610cdd83836110e6565b9392505050565b60006107ee60068363ffffffff610e0a16565b60006107ee82610bd7565b6000610d0c610b27565b610d1557600080fd5b6001600160a01b038216610d2857600080fd5b610d3182610bd7565b610d3e57610d3e826108b8565b6000610d49846109dc565b9050610d568484836110ef565b826001600160a01b0316846001600160a01b03167f8d517738b620ddd4757b2c72628ad2ee2e182d8eadaceb727477e0b661e0afad836040518082815260200191505060405180910390a35060019392505050565b610db3610b27565b610dbc57600080fd5b6108d3816111bc565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610df8610b27565b610e0157600080fd5b6108d3816111c5565b60006001600160a01b038216610e1f57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610e5060018263ffffffff61123316565b6040516001600160a01b038216907fe989c3ea74e8447b86355ca10e7b910a5ea9931330517c33e3002727f5e95ee890600090a250565b60006107ee82610cf7565b6001600160a01b0383166000908152600460209081526040808320338452909152812054610ec6908363ffffffff6110d116565b6001600160a01b0385166000908152600460209081526040808320338452909152902055610ef58484846110ef565b6001600160a01b03841660008181526004602090815260408083203380855290835292819020548151908152905192939260008051602061158f833981519152929181900390910190a35060019392505050565b610f5a60028263ffffffff61127b16565b6040516001600160a01b038216907f5a85c934d044d4af54e45ef3efa70919b2301fe806a7b570e09d7e0f90a4445a90600090a250565b600082820183811015610cdd57600080fd5b6000610fae33610ce4565b610fb757600080fd5b610fc183836112c7565b50600192915050565b6108d333826112f7565b610fe560028263ffffffff61123316565b6040516001600160a01b038216907fbc6a411073357cff5bee0c71e7722c8fd47b5a40591adcedeaac84bd10c0736890600090a250565b610a8882826113a0565b61102f336107db565b61103857600080fd5b6108d381611450565b61105260068263ffffffff61127b16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61109a60068263ffffffff61123316565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000828211156110e057600080fd5b50900390565b6000610fc13384845b6001600160a01b03821661110257600080fd5b6001600160a01b03831660009081526003602052604090205461112b908263ffffffff6110d116565b6001600160a01b038085166000908152600360205260408082209390935590841681522054611160908263ffffffff610f9116565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6108d381610e3f565b6001600160a01b0381166111d857600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811661124657600080fd5b6112508282610e0a565b61125957600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b03811661128e57600080fd5b6112988282610e0a565b156112a257600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6007546112e2826112d66107ff565b9063ffffffff610f9116565b11156112ed57600080fd5b610a888282611498565b6001600160a01b03821661130a57600080fd5b60055461131d908263ffffffff6110d116565b6005556001600160a01b038216600090815260036020526040902054611349908263ffffffff6110d116565b6001600160a01b0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b03821660009081526004602090815260408083203384529091529020546113d4908263ffffffff6110d116565b6001600160a01b038316600090815260046020908152604080832033845290915290205561140282826112f7565b6001600160a01b03821660008181526004602090815260408083203380855290835292819020548151908152905192939260008051602061158f833981519152929181900390910190a35050565b61146160018263ffffffff61127b16565b6040516001600160a01b038216907f6ef188d34b8fac4126790bd81059831348a92504fa4f99a97c9958a1749c63bc90600090a250565b6001600160a01b0382166114ab57600080fd5b6005546114be908263ffffffff610f9116565b6005556001600160a01b0382166000908152600360205260409020546114ea908263ffffffff610f9116565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe427579696e6720696e766573746f72206973206e6f7420616c6c6f77656420746f2062757953656c6c696e6720696e766573746f72206973206e6f7420616c6c6f77656420746f2073656c6c8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820beddef2eb38bb6a8006983b9f8d9a2fc31847aa416dccc126b3cd571efe9732f0029",
  "sourceMap": "129:239:3:-;;;336:35:4;;;-1:-1:-1;;336:35:4;;;194:171:3;5:2:-1;;;;30:1;27;20:12;5:2;194:171:3;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;194:171:3;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;194:171:3;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;194:171:3;;;;;515:6:11;:19;;-1:-1:-1;;;;;;515:19:11;524:10;515:19;;;;194:171:3;549:40:11;194:171:3;;-1:-1:-1;194:171:3;;-1:-1:-1;323:4:3;;194:171;;;;298:3;;;;-1:-1:-1;;;;;582:6:11;;515;549:40;;515:6;;549:40;448:24:0;461:10;448:12;;;:24;;:::i;:::-;275:22:9;286:10;275;;;:22;;:::i;:::-;256:1:14;250:3;:7;242:16;;;;;;268:4;:10;-1:-1:-1;493:12:15;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;515:16:15;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:15;:20;;-1:-1:-1;;541:20:15;;;;;;;;;;;;-1:-1:-1;129:239:3;;-1:-1:-1;;;;;129:239:3;997:128:0;1056:23;1071:7;1056:10;:14;;;;;;:23;;;;:::i;:::-;1095:22;;-1:-1:-1;;;;;1095:22:0;;;;;;;;997:128;:::o;685:119:9:-;741:21;754:7;741:8;:12;;;;;;:21;;;;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:9;;;;;;;;685:119;:::o;259:181:8:-;-1:-1:-1;;;;;335:21:8;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:8;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:8;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:8;;874:30;;;;;;-1:-1:-1;;;;;;921:20:8;:11;:20;;;;;;;;;;;;;;;786:162::o;129:239:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;129:239:3;;;-1:-1:-1;129:239:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "129:239:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;129:239:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;336:35:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;628:81:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:238:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2735:238:12;;;;;;;;:::i;582:113:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;582:113:0;-1:-1:-1;;;;;582:113:0;;:::i;809:81::-;;;:::i;:::-;;936:89:12;;;:::i;:::-;;;;;;;;;;;;;;;;2088:373:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2088:373:4;;;;;;;;;;;;;;;;;:::i;800:100:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;800:100:1;-1:-1:-1;;;;;800:100:1;;:::i;930:81:15:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;353:73:14;;;:::i;4233:317:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:12;;;;;;;;:::i;1477:141:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1477:141:4;;;;;;;;:::i;3042:80::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3042:80:4;;:::i;1022:83:1:-;;;:::i;1234:104:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:12;-1:-1:-1;;;;;1234:104:12;;:::i;1347:137:11:-;;;:::i;908:106:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;908:106:1;-1:-1:-1;;;;;908:106:1;;:::i;3374:108:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3374:108:4;;;;;;;;:::i;1323:148::-;;;:::i;1624:183::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1624:183:4;;;;;;;;:::i;659:77:11:-;;;:::i;:::-;;;;-1:-1:-1;;;;;659:77:11;;;;;;;;;;;;;;979:90;;;:::i;308:93:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;308:93:5;-1:-1:-1;;;;;308:93:5;;:::i;771:85:15:-;;;:::i;508:90:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:9;-1:-1:-1;;;;;508:90:9;;:::i;604:75::-;;;:::i;677:115:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;677:115:1;-1:-1:-1;;;;;677:115:1;;:::i;5058:327:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:12;;;;;;;;:::i;2625:294:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2625:294:4;;;;;;;;:::i;395:107:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:9;-1:-1:-1;;;;;395:107:9;;:::i;710:214:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;710:214:5;-1:-1:-1;;;;;710:214:5;;:::i;3712:344:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3712:344:4;;;;;;;;;;:::i;483:99:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;483:99:5;-1:-1:-1;;;;;483:99:5;;:::i;1669:129:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1669:129:12;;;;;;;;;;:::i;1655:107:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:11;-1:-1:-1;;;;;1655:107:11;;:::i;336:35:4:-;;;;;;:::o;628:81:15:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2735:238:12:-;2800:4;-1:-1:-1;;;;;2824:21:12;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:12;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;-1:-1:-1;;;;;;;;;;;2909:36:12;;;;;;;;;;-1:-1:-1;2962:4:12;2735:238;;;;:::o;582:113:0:-;640:4;664:23;:10;679:7;664:23;:14;:23;:::i;:::-;657:30;582:113;-1:-1:-1;;582:113:0:o;809:81::-;855:27;871:10;855:15;:27::i;:::-;809:81::o;936:89:12:-;1006:12;;936:89;:::o;2088:373:4:-;594:15;;2233:4;;594:15;;586:24;;;;;;2261:18;2276:2;2261:14;:18::i;:::-;2253:68;;;;-1:-1:-1;;;;;2253:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2339:21;2355:4;2339:15;:21::i;:::-;2331:73;;;;-1:-1:-1;;;;;2331:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2421:33;2440:4;2445:2;2448:5;2421:18;:33::i;:::-;2414:40;2088:373;-1:-1:-1;;;;2088:373:4:o;800:100:1:-;531:22:0;542:10;531;:22::i;:::-;523:31;;;;;;870:22:1;884:7;870:13;:22::i;:::-;800:100;:::o;930:81:15:-;995:9;;;;930:81;:::o;353:73:14:-;415:4;;353:73;:::o;4233:317:12:-;4313:4;-1:-1:-1;;;;;4337:21:12;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:12;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:12;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;-1:-1:-1;;;;;;;;;;;4462:60:12;;;;;;;;;;-1:-1:-1;4539:4:12;4233:317;;;;:::o;1477:141:4:-;1553:4;350:20:9;359:10;350:8;:20::i;:::-;342:29;;;;;;517:15:4;;;;516:16;508:25;;;;;;1569:21;1580:2;1584:5;1569:10;:21::i;:::-;-1:-1:-1;1607:4:4;;1477:141;-1:-1:-1;;;1477:141:4:o;3042:80::-;863:9:11;:7;:9::i;:::-;855:18;;;;;;3098:17:4;3109:5;3098:10;:17::i;1022:83:1:-;1069:28;1086:10;1069:16;:28::i;1234:104:12:-;-1:-1:-1;;;;;1315:16:12;1289:7;1315:16;;;:9;:16;;;;;;;1234:104::o;1347:137:11:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:11;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:11;;;1347:137::o;908:106:1:-;531:22:0;542:10;531;:22::i;:::-;523:31;;;;;;981:25:1;998:7;981:16;:25::i;3374:108:4:-;863:9:11;:7;:9::i;:::-;855:18;;;;;;3448:27:4;3463:4;3469:5;3448:14;:27::i;:::-;3374:108;;:::o;1323:148::-;1382:4;863:9:11;:7;:9::i;:::-;855:18;;;;;;517:15:4;;;;516:16;508:25;;;;;;1396:15;:22;;-1:-1:-1;;1396:22:4;1414:4;1396:22;;;1431:14;;;;1396:15;;1431:14;-1:-1:-1;1460:4:4;1323:148;:::o;1624:183::-;1710:4;350:20:9;359:10;350:8;:20::i;:::-;342:29;;;;;;517:15:4;;;;516:16;508:25;;;;;;1726:22;1745:2;1726:18;:22::i;659:77:11:-;697:7;723:6;-1:-1:-1;;;;;723:6:11;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:11;1042:10;:20;;979:90::o;308:93:5:-;863:9:11;:7;:9::i;:::-;855:18;;;;;;370:26:5;388:7;370:17;:26::i;771:85:15:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:9;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;604:75::-;647:25;661:10;647:13;:25::i;677:115:1:-;736:4;760:24;:11;776:7;760:24;:15;:24;:::i;5058:327:12:-;5143:4;-1:-1:-1;;;;;5167:21:12;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:12;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;2625:294:4:-;594:15;;2698:4;;594:15;;586:24;;;;;;2722:18;2737:2;2722:14;:18::i;:::-;2714:68;;;;-1:-1:-1;;;;;2714:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2800:27;2816:10;2800:15;:27::i;:::-;2792:79;;;;-1:-1:-1;;;;;2792:79:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2888:24;2903:2;2906:5;2888:14;:24::i;:::-;2881:31;2625:294;-1:-1:-1;;;2625:294:4:o;395:107:9:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;710:214:5:-;780:4;799:28;811:15;799:11;:28::i;3712:344:4:-;3787:4;863:9:11;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;3815:16:4;;3807:25;;;;;;3847:15;3859:2;3847:11;:15::i;:::-;3843:60;;3876:16;3889:2;3876:12;:16::i;:::-;3921:13;3937:15;3947:4;3937:9;:15::i;:::-;3921:31;;3962:26;3972:4;3978:2;3982:5;3962:9;:26::i;:::-;4018:2;-1:-1:-1;;;;;4004:24:4;4012:4;-1:-1:-1;;;;;4004:24:4;;4022:5;4004:24;;;;;;;;;;;;;;;;;;-1:-1:-1;4045:4:4;;3712:344;-1:-1:-1;;;3712:344:4:o;483:99:5:-;863:9:11;:7;:9::i;:::-;855:18;;;;;;548:29:5;569:7;548:20;:29::i;1669:129:12:-;-1:-1:-1;;;;;1767:15:12;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;1655:107:11:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;786:162:8:-;858:4;-1:-1:-1;;;;;882:21:8;;874:30;;;;;;-1:-1:-1;;;;;;921:20:8;:11;:20;;;;;;;;;;;;;;;786:162::o;1133:136:0:-;1195:26;:10;1213:7;1195:26;:17;:26;:::i;:::-;1237:24;;-1:-1:-1;;;;;1237:24:0;;;;;;;;1133:136;:::o;815:131:4:-;888:4;908:31;923:15;908:14;:31::i;3436:294:12:-;-1:-1:-1;;;;;3560:14:12;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:12;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:12;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;-1:-1:-1;;;;;;;;;;;3648:54:12;;;;;;;;;;-1:-1:-1;3719:4:12;3436:294;;;;;:::o;1113:131:1:-;1173:24;:11;1189:7;1173:24;:15;:24;:::i;:::-;1213:23;;-1:-1:-1;;;;;1213:23:1;;;;;;;;1113:131;:::o;1431:145:10:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;443:128:16;511:4;350:20:9;359:10;350:8;:20::i;:::-;342:29;;;;;;527:16:16;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:16;443:128;;;;:::o;295:77:13:-;341:24;347:10;359:5;341;:24::i;1252:139:1:-;1315:27;:11;1334:7;1315:27;:18;:27;:::i;:::-;1358:25;;-1:-1:-1;;;;;1358:25:1;;;;;;;;1252:139;:::o;624:93:13:-;688:22;698:4;704:5;688:9;:22::i;703:98:0:-;531:22;542:10;531;:22::i;:::-;523:31;;;;;;772:21;785:7;772:12;:21::i;685:119:9:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:9;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:9;;;;;;;;810:127;:::o;1205:145:10:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:10;;;1205:145::o;1962:137:12:-;2023:4;2039:32;2049:10;2061:2;2065:5;5599:256;-1:-1:-1;;;;;5686:16:12;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:12;;;;;;:9;:15;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:12;;;;;;;:9;:15;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:12;;;;;;;:9;:13;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o;898:91:0:-;957:24;973:7;957:15;:24::i;1906:183:11:-;-1:-1:-1;;;;;1979:22:11;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:11;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:11;-1:-1:-1;;;;;2065:17:11;;;;;;;;;;1906:183::o;514:184:8:-;-1:-1:-1;;;;;593:21:8;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:8;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:8;;;514:184::o;259:181::-;-1:-1:-1;;;;;335:21:8;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:8;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:8;429:4;406:27;;;259:181::o;432:151:14:-;534:4;;506:24;524:5;506:13;:11;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;:32;;498:41;;;;;;549:27;561:7;570:5;549:11;:27::i;6687:263:12:-;-1:-1:-1;;;;;6761:21:12;;6753:30;;;;;;6809:12;;:23;;6826:5;6809:23;:16;:23;:::i;:::-;6794:12;:38;-1:-1:-1;;;;;6863:18:12;;;;;;:9;:18;;;;;;:29;;6886:5;6863:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6842:18:12;;;;;;:9;:18;;;;;;;;:50;;;;6907:36;;;;;;;6842:18;;6907:36;;;;;;;;;;;6687:263;;:::o;7339:255::-;-1:-1:-1;;;;;7441:17:12;;;;;;:8;:17;;;;;;;;7459:10;7441:29;;;;;;;;:40;;7475:5;7441:40;:33;:40;:::i;:::-;-1:-1:-1;;;;;7409:17:12;;;;;;:8;:17;;;;;;;;7427:10;7409:29;;;;;;;:72;7491:21;7418:7;7506:5;7491;:21::i;:::-;-1:-1:-1;;;;;7527:60:12;;7557:17;;;;:8;:17;;;;;;;;7545:10;7557:29;;;;;;;;;;;7527:60;;;;;;;7545:10;;7527:60;-1:-1:-1;;;;;;;;;;;7527:60:12;;;;;;;;;;7339:255;;:::o;997:128:0:-;1056:23;:10;1071:7;1056:23;:14;:23;:::i;:::-;1095:22;;-1:-1:-1;;;;;1095:22:0;;;;;;;;997:128;:::o;6198:263:12:-;-1:-1:-1;;;;;6272:21:12;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:23;:16;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:12;;;;;;:9;:18;;;;;;:29;;6397:5;6374:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:12;;;;;;:9;:18;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;;;6418:36;;;;;;;;;;6198:263;;:::o",
  "source": "pragma solidity ^0.5.7;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"./WhiteListToken.sol\";\n\ncontract StellerroESToken is WhiteListToken, ERC20Detailed{\n\n    constructor(uint256 cap, string memory name, string memory symbol, uint8 decimals)\n      WhiteListToken(cap)\n      ERC20Detailed(name, symbol, decimals)\n    public {\n    }\n\n}\n",
  "sourcePath": "C:/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/StellerroESToken.sol",
  "ast": {
    "absolutePath": "/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/StellerroESToken.sol",
    "exportedSymbols": {
      "StellerroESToken": [
        307
      ]
    },
    "id": 308,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 280,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 281,
        "nodeType": "ImportDirective",
        "scope": 308,
        "sourceUnit": 1749,
        "src": "25:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/WhiteListToken.sol",
        "file": "./WhiteListToken.sol",
        "id": 282,
        "nodeType": "ImportDirective",
        "scope": 308,
        "sourceUnit": 603,
        "src": "97:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 283,
              "name": "WhiteListToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 602,
              "src": "158:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhiteListToken_$602",
                "typeString": "contract WhiteListToken"
              }
            },
            "id": 284,
            "nodeType": "InheritanceSpecifier",
            "src": "158:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 285,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1748,
              "src": "174:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1748",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 286,
            "nodeType": "InheritanceSpecifier",
            "src": "174:13:3"
          }
        ],
        "contractDependencies": [
          112,
          221,
          602,
          651,
          933,
          1170,
          1602,
          1633,
          1690,
          1748,
          1776,
          1845
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 307,
        "linearizedBaseContracts": [
          307,
          1748,
          602,
          1633,
          1690,
          1776,
          933,
          1602,
          1845,
          651,
          221,
          112,
          1170
        ],
        "name": "StellerroESToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "358:7:3",
              "statements": []
            },
            "documentation": null,
            "id": 306,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 297,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 288,
                    "src": "298:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 298,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 296,
                  "name": "WhiteListToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 602,
                  "src": "283:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_WhiteListToken_$602_$",
                    "typeString": "type(contract WhiteListToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "283:19:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 300,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 290,
                    "src": "323:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 301,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 292,
                    "src": "329:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 302,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 294,
                    "src": "337:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 303,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 299,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1748,
                  "src": "309:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1748_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "309:37:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "206:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 290,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "219:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 292,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "239:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "239:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "261:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "205:71:3"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:0:3"
            },
            "scope": 307,
            "src": "194:171:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 308,
        "src": "129:239:3"
      }
    ],
    "src": "0:369:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/StellerroESToken.sol",
    "exportedSymbols": {
      "StellerroESToken": [
        307
      ]
    },
    "id": 308,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 280,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 281,
        "nodeType": "ImportDirective",
        "scope": 308,
        "sourceUnit": 1749,
        "src": "25:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/WhiteListToken.sol",
        "file": "./WhiteListToken.sol",
        "id": 282,
        "nodeType": "ImportDirective",
        "scope": 308,
        "sourceUnit": 603,
        "src": "97:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 283,
              "name": "WhiteListToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 602,
              "src": "158:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhiteListToken_$602",
                "typeString": "contract WhiteListToken"
              }
            },
            "id": 284,
            "nodeType": "InheritanceSpecifier",
            "src": "158:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 285,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1748,
              "src": "174:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1748",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 286,
            "nodeType": "InheritanceSpecifier",
            "src": "174:13:3"
          }
        ],
        "contractDependencies": [
          112,
          221,
          602,
          651,
          933,
          1170,
          1602,
          1633,
          1690,
          1748,
          1776,
          1845
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 307,
        "linearizedBaseContracts": [
          307,
          1748,
          602,
          1633,
          1690,
          1776,
          933,
          1602,
          1845,
          651,
          221,
          112,
          1170
        ],
        "name": "StellerroESToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "358:7:3",
              "statements": []
            },
            "documentation": null,
            "id": 306,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 297,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 288,
                    "src": "298:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 298,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 296,
                  "name": "WhiteListToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 602,
                  "src": "283:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_WhiteListToken_$602_$",
                    "typeString": "type(contract WhiteListToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "283:19:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 300,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 290,
                    "src": "323:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 301,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 292,
                    "src": "329:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 302,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 294,
                    "src": "337:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 303,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 299,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1748,
                  "src": "309:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1748_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "309:37:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "206:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 290,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "219:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 292,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "239:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "239:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "261:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "205:71:3"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:0:3"
            },
            "scope": 307,
            "src": "194:171:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 308,
        "src": "129:239:3"
      }
    ],
    "src": "0:369:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xF9a3Baea8eC896a1f5AC8e624b2c78Ed7A32057f",
      "transactionHash": "0xfd07b0a147d760ce16bff82349e945a9392db26858b17c8979fb6fdfad2c2212"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-06-29T19:47:20.788Z",
  "devdoc": {
    "methods": {
      "addKYCAdmin(address)": {
        "params": {
          "account": "the address to add"
        }
      },
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "cap()": {
        "return": "the cap for the token minting."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "finishMinting()": {
        "details": "Function to stop minting new tokens.",
        "return": "True if the operation was successful."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isFreeInvestor(address)": {
        "params": {
          "investorAddress": "the investor address"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "removeKYCAdmin(address)": {
        "params": {
          "account": "the address to remove"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "restoreTokens(address,address)": {
        "details": "restore tokens from one address to another. to use only in case a user cannot access its token.",
        "params": {
          "from": "address The old user's address",
          "to": "address The new user's address"
        }
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addKYCAdmin(address)": {
        "notice": "Add a kyc admin"
      },
      "isFreeInvestor(address)": {
        "notice": "Check if the investor is KYC approved and also accredited"
      },
      "removeKYCAdmin(address)": {
        "notice": "Remove a kyc admin"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}