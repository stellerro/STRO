{
  "contractName": "WhiteListTokenTestable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isKYCAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceKYCAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addKYClisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceKYClisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeKYClisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approveAndMint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addKYCAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isKYClisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "investorAddress",
          "type": "address"
        }
      ],
      "name": "isFreeInvestor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        }
      ],
      "name": "restoreTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeKYCAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "cap",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Restore",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYClistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYClistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYCAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYCAdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_investorAddress",
          "type": "address"
        }
      ],
      "name": "test_canInvestorBuy",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_investorAddress",
          "type": "address"
        }
      ],
      "name": "test_canInvestorSell",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isKYCAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceKYCAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investorAddress\",\"type\":\"address\"}],\"name\":\"test_canInvestorBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addKYClisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceKYClisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeKYClisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndMint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addKYCAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isKYClisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"investorAddress\",\"type\":\"address\"}],\"name\":\"isFreeInvestor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"restoreTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeKYCAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investorAddress\",\"type\":\"address\"}],\"name\":\"test_canInvestorSell\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"cap\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Restore\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"KYClistedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"KYClistedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"KYCAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"KYCAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addKYCAdmin(address)\":{\"params\":{\"account\":\"the address to add\"}},\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"value\":\"The amount of token to be burned.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns a specific amount of tokens from the target address and decrements allowance\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"value\":\"uint256 The amount of token to be burned\"}},\"cap()\":{\"return\":\"the cap for the token minting.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens.\",\"return\":\"True if the operation was successful.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"isFreeInvestor(address)\":{\"params\":{\"investorAddress\":\"the investor address\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"paused()\":{\"return\":\"true if the contract is paused, false otherwise.\"},\"removeKYCAdmin(address)\":{\"params\":{\"account\":\"the address to remove\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"restoreTokens(address,address)\":{\"details\":\"restore tokens from one address to another. to use only in case a user cannot access its token.\",\"params\":{\"from\":\"address The old user's address\",\"to\":\"address The new user's address\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"addKYCAdmin(address)\":{\"notice\":\"Add a kyc admin\"},\"isFreeInvestor(address)\":{\"notice\":\"Check if the investor is KYC approved and also accredited\"},\"removeKYCAdmin(address)\":{\"notice\":\"Remove a kyc admin\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"notice\":\"A testable version for WhiteListToken\"}},\"settings\":{\"compilationTarget\":{\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/testables/WhiteListTokenTestable.sol\":\"WhiteListTokenTestable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/KYCAdminRole.sol\":{\"keccak256\":\"0x54df1c508c3a0b5543577ddabc534d8495f36cca859ee5d2af86d95ee4eba0a4\",\"urls\":[\"bzzr://e29ba87224622ba0f71fa2c61cc3e939b5a1e0868726ff0cd9de1b5ad5d51b09\"]},\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/KYCListedRole.sol\":{\"keccak256\":\"0xeae32e53faf8fde88f4f3a9b8511ab6637f78163e434174dda1c35abf91870a1\",\"urls\":[\"bzzr://286385385f836232332110887adbc2e5ee3de805bd0302979ef64126c9ea76db\"]},\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/WhiteListToken.sol\":{\"keccak256\":\"0xb9526cef1fc961157c54eea04cf188977a3c4ab9652c1f6531136f279dc0c591\",\"urls\":[\"bzzr://018a3998e9091bab5fa7b4ac2c0d9123b71bf0c33edb0fb805226cbfc203b4ef\"]},\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/WhiteListTokenAccess.sol\":{\"keccak256\":\"0xe9a2cc3b9048b3d4c7c355f24cc8d64d45cd4afbd5d36ac17745dce941349374\",\"urls\":[\"bzzr://59ee6cff242914e223f2868f9c1124880009a67fcab723e9a1219754ad26c501\"]},\"/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/testables/WhiteListTokenTestable.sol\":{\"keccak256\":\"0x4ca1a11e438484dca27f308c431cde05fabe64c0f736d19d50c298bc4e22448b\",\"urls\":[\"bzzr://12854292fc24c386838ed4fdce3305d1499fad114b93658d7169f25edd074791\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzzr://f704341d520fbc98716541f1b3f67737f0ee6e94adf072a66acb2bd25d593c2b\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x3199053db04cdae6c9b4380921a4a4ee720b568d6a9660883b29d25fbec31bc0\",\"urls\":[\"bzzr://d06d25f7b57bff1dcb88c5aa476f4037179e6f364b18a89935c11945a857fb18\"]},\"openzeppelin-solidity/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0x6506133e295a7199df2ac5dfc52853d9d767f68450b6d0193e9d8056b164ce86\",\"urls\":[\"bzzr://357744ad2278716087860855e31728d9f99493bb4a3567a2e39a910cb219601a\"]},\"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x3b0ed31deeba7e3c6cfbbe8092a6b427084ee390800a06acdea5c17c8185d606\",\"urls\":[\"bzzr://64665e3aefdb15dd5d2ebe3cba5103a150199e27219fc16e9d71815328e6f64f\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa3e68fd7f987c8fbdaf4867d428a69a15f3cf2f69709a5b0a0fbef750b0e6fbc\",\"urls\":[\"bzzr://f4ebb7c5b9e429b98b07e2caca6156c13c3724e9b1191cca8423ab8427bc6265\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Capped.sol\":{\"keccak256\":\"0x0d305430adb06491d743bba706db45cf79f6c10ef26ca09209549d13fd169182\",\"urls\":[\"bzzr://5aa0d905b7606726318d0e8a0168640098f8b6845a7f4c7bf7d424ecbc753294\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xc4ca2883e0b0743604143952024c250bb13737ad54bb666b117efdcb766fe3a8\",\"urls\":[\"bzzr://6a7d33fd3907230f8af9f865fc802ab3099a1e4c10ad4efca35edadc96efcd3d\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x60806040526009805461ff00191690553480156200001c57600080fd5b5060405160208062001941833981018060405260208110156200003e57600080fd5b5051600080546001600160a01b0319163317808255604051839283926001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36200009a33620000e060201b60201c565b620000ab336200013260201b60201c565b60008111620000b957600080fd5b600755620000ce3362000184602090811b901c565b50506009805460ff1916905562000262565b620000fb816001620001d660201b620013701790919060201c565b6040516001600160a01b038216907f6ef188d34b8fac4126790bd81059831348a92504fa4f99a97c9958a1749c63bc90600090a250565b6200014d816006620001d660201b620013701790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6200019f816008620001d660201b620013701790919060201c565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b6001600160a01b038116620001ea57600080fd5b620001fc82826200022c60201b60201c565b156200020757600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166200024257600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6116cf80620002726000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c806379cc67901161013b578063a2d5027a116100b8578063c6416f4c1161007c578063c6416f4c14610650578063d92a6cf61461067e578063dd62ed3e146106a4578063f2453eee14610315578063f2fde38b146106d257610248565b8063a2d5027a14610586578063a457c2d7146105ac578063a9059cbb146105d8578063aa271e1a14610604578063c2282f771461062a57610248565b80638da5cb5b116100ff5780638da5cb5b146105065780638f32d59b1461052a5780638fd6000414610532578063983b2d5614610558578063986502751461057e57610248565b806379cc6790146104785780637d64bcb4146104a457806382dc1ec4146104ac5780638456cb59146104d25780638aa0ddc8146104da57610248565b80633f4ba83a116101c95780635c975abb1161018d5780635c975abb146104145780636ef8d66d1461041c57806370a0823114610424578063715018a61461044a5780637696f4161461045257610248565b80633f4ba83a1461039557806340c10f191461039d57806342966c68146103c957806346fbf68e146103e65780635b4e3f3d1461040c57610248565b806323b872dd1161021057806323b872dd146102df5780632ab17c49146103155780632c1019221461033b578063355274ea14610361578063395093511461036957610248565b806305d2035b1461024d578063095ea7b31461026957806312f25343146102955780631548dbc8146102bb57806318160ddd146102c5575b600080fd5b6102556106f8565b604080519115158252519081900360200190f35b6102556004803603604081101561027f57600080fd5b506001600160a01b038135169060200135610706565b610255600480360360208110156102ab57600080fd5b50356001600160a01b0316610770565b6102c3610789565b005b6102cd610794565b60408051918252519081900360200190f35b610255600480360360608110156102f557600080fd5b506001600160a01b0381358116916020810135909116906040013561079a565b6102556004803603602081101561032b57600080fd5b50356001600160a01b0316610862565b6102c36004803603602081101561035157600080fd5b50356001600160a01b031661086d565b6102cd61088b565b6102556004803603604081101561037f57600080fd5b506001600160a01b038135169060200135610891565b6102c361092d565b610255600480360360408110156103b357600080fd5b506001600160a01b03813516906020013561098d565b6102c3600480360360208110156103df57600080fd5b50356109ca565b610255600480360360208110156103fc57600080fd5b50356001600160a01b03166109e4565b6102c36109f7565b610255610a00565b6102c3610a09565b6102cd6004803603602081101561043a57600080fd5b50356001600160a01b0316610a12565b6102c3610a2d565b6102c36004803603602081101561046857600080fd5b50356001600160a01b0316610a88565b6102c36004803603604081101561048e57600080fd5b506001600160a01b038135169060200135610aa3565b610255610ac2565b6102c3600480360360208110156104c257600080fd5b50356001600160a01b0316610b28565b6102c3610b43565b610255600480360360408110156104f057600080fd5b506001600160a01b038135169060200135610ba7565b61050e610bd9565b604080516001600160a01b039092168252519081900360200190f35b610255610be8565b6102c36004803603602081101561054857600080fd5b50356001600160a01b0316610bf9565b6102c36004803603602081101561056e57600080fd5b50356001600160a01b0316610c13565b6102c3610c2e565b6102556004803603602081101561059c57600080fd5b50356001600160a01b0316610c37565b610255600480360360408110156105c257600080fd5b506001600160a01b038135169060200135610c4a565b610255600480360360408110156105ee57600080fd5b506001600160a01b038135169060200135610c93565b6102556004803603602081101561061a57600080fd5b50356001600160a01b0316610d49565b6102556004803603602081101561064057600080fd5b50356001600160a01b0316610d5c565b6102556004803603604081101561066657600080fd5b506001600160a01b0381358116916020013516610d67565b6102c36004803603602081101561069457600080fd5b50356001600160a01b0316610e10565b6102cd600480360360408110156106ba57600080fd5b506001600160a01b0381358116916020013516610e2a565b6102c3600480360360208110156106e857600080fd5b50356001600160a01b0316610e55565b600954610100900460ff1681565b60006001600160a01b03831661071b57600080fd5b3360008181526004602090815260408083206001600160a01b0388168085529083529281902086905580518681529051929392600080516020611684833981519152929181900390910190a350600192915050565b600061078360018363ffffffff610e6f16565b92915050565b61079233610ea4565b565b60055490565b600954600090610100900460ff166107b157600080fd5b60095460ff16156107c157600080fd5b6107ca83610eec565b61080857604051600160e51b62461bcd0281526004018080602001828103825260258152602001806116386025913960400191505060405180910390fd5b61081184610eec565b61084f57604051600160e51b62461bcd02815260040180806020018281038252602781526020018061165d6027913960400191505060405180910390fd5b61085a848484610ef7565b949350505050565b600061078382610eec565b61087633610770565b61087f57600080fd5b61088881610fae565b50565b60075490565b60006001600160a01b0383166108a657600080fd5b3360009081526004602090815260408083206001600160a01b03871684529091529020546108da908363ffffffff610ff616565b3360008181526004602090815260408083206001600160a01b038916808552908352928190208590558051948552519193600080516020611684833981519152929081900390910190a350600192915050565b610936336109e4565b61093f57600080fd5b60095460ff1661094e57600080fd5b6009805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b600061099833610d49565b6109a157600080fd5b600954610100900460ff16156109b657600080fd5b6109c08383611008565b5060019392505050565b6109d2610be8565b6109db57600080fd5b6108888161102f565b600061078360088363ffffffff610e6f16565b61079233611039565b60095460ff1690565b61079233611081565b6001600160a01b031660009081526003602052604090205490565b610a35610be8565b610a3e57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610a9133610770565b610a9a57600080fd5b61088881611039565b610aab610be8565b610ab457600080fd5b610abe82826110c9565b5050565b6000610acc610be8565b610ad557600080fd5b600954610100900460ff1615610aea57600080fd5b6009805461ff0019166101001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b610b31336109e4565b610b3a57600080fd5b610888816110d3565b610b4c336109e4565b610b5557600080fd5b60095460ff1615610b6557600080fd5b6009805460ff191660011790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b6000610bb233610d49565b610bbb57600080fd5b600954610100900460ff1615610bd057600080fd5b6109b68361086d565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610c01610be8565b610c0a57600080fd5b6108888161111b565b610c1c33610d49565b610c2557600080fd5b61088881611136565b6107923361117e565b600061078360028363ffffffff610e6f16565b60006001600160a01b038316610c5f57600080fd5b3360009081526004602090815260408083206001600160a01b03871684529091529020546108da908363ffffffff6111c616565b600954600090610100900460ff16610caa57600080fd5b610cb383610eec565b610cf157604051600160e51b62461bcd0281526004018080602001828103825260258152602001806116386025913960400191505060405180910390fd5b610cfa33610eec565b610d3857604051600160e51b62461bcd02815260040180806020018281038252602781526020018061165d6027913960400191505060405180910390fd5b610d4283836111db565b9392505050565b600061078360068363ffffffff610e6f16565b600061078382610c37565b6000610d71610be8565b610d7a57600080fd5b6001600160a01b038216610d8d57600080fd5b610d9682610c37565b610da357610da38261086d565b6000610dae84610a12565b9050610dbb8484836111e4565b826001600160a01b0316846001600160a01b03167f8d517738b620ddd4757b2c72628ad2ee2e182d8eadaceb727477e0b661e0afad836040518082815260200191505060405180910390a35060019392505050565b610e18610be8565b610e2157600080fd5b610888816112b1565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610e5d610be8565b610e6657600080fd5b610888816112ba565b60006001600160a01b038216610e8457600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610eb560018263ffffffff61132816565b6040516001600160a01b038216907fe989c3ea74e8447b86355ca10e7b910a5ea9931330517c33e3002727f5e95ee890600090a250565b600061078382610d5c565b6001600160a01b0383166000908152600460209081526040808320338452909152812054610f2b908363ffffffff6111c616565b6001600160a01b0385166000908152600460209081526040808320338452909152902055610f5a8484846111e4565b6001600160a01b038416600081815260046020908152604080832033808552908352928190205481519081529051929392600080516020611684833981519152929181900390910190a35060019392505050565b610fbf60028263ffffffff61137016565b6040516001600160a01b038216907f5a85c934d044d4af54e45ef3efa70919b2301fe806a7b570e09d7e0f90a4445a90600090a250565b600082820183811015610d4257600080fd5b600061101333610d49565b61101c57600080fd5b61102683836113bc565b50600192915050565b61088833826113ec565b61104a60028263ffffffff61132816565b6040516001600160a01b038216907fbc6a411073357cff5bee0c71e7722c8fd47b5a40591adcedeaac84bd10c0736890600090a250565b61109260088263ffffffff61132816565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b610abe8282611495565b6110e460088263ffffffff61137016565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b61112433610770565b61112d57600080fd5b61088881611545565b61114760068263ffffffff61137016565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61118f60068263ffffffff61132816565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000828211156111d557600080fd5b50900390565b60006110263384845b6001600160a01b0382166111f757600080fd5b6001600160a01b038316600090815260036020526040902054611220908263ffffffff6111c616565b6001600160a01b038085166000908152600360205260408082209390935590841681522054611255908263ffffffff610ff616565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b61088881610ea4565b6001600160a01b0381166112cd57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811661133b57600080fd5b6113458282610e6f565b61134e57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b03811661138357600080fd5b61138d8282610e6f565b1561139757600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6007546113d7826113cb610794565b9063ffffffff610ff616565b11156113e257600080fd5b610abe828261158d565b6001600160a01b0382166113ff57600080fd5b600554611412908263ffffffff6111c616565b6005556001600160a01b03821660009081526003602052604090205461143e908263ffffffff6111c616565b6001600160a01b0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b03821660009081526004602090815260408083203384529091529020546114c9908263ffffffff6111c616565b6001600160a01b03831660009081526004602090815260408083203384529091529020556114f782826113ec565b6001600160a01b038216600081815260046020908152604080832033808552908352928190205481519081529051929392600080516020611684833981519152929181900390910190a35050565b61155660018263ffffffff61137016565b6040516001600160a01b038216907f6ef188d34b8fac4126790bd81059831348a92504fa4f99a97c9958a1749c63bc90600090a250565b6001600160a01b0382166115a057600080fd5b6005546115b3908263ffffffff610ff616565b6005556001600160a01b0382166000908152600360205260409020546115df908263ffffffff610ff616565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe427579696e6720696e766573746f72206973206e6f7420616c6c6f77656420746f2062757953656c6c696e6720696e766573746f72206973206e6f7420616c6c6f77656420746f2073656c6c8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a7230582063ce7125c285f2ace6ca2193d7185215cf35a8109c438b6c958bb303302b2fcc0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102485760003560e01c806379cc67901161013b578063a2d5027a116100b8578063c6416f4c1161007c578063c6416f4c14610650578063d92a6cf61461067e578063dd62ed3e146106a4578063f2453eee14610315578063f2fde38b146106d257610248565b8063a2d5027a14610586578063a457c2d7146105ac578063a9059cbb146105d8578063aa271e1a14610604578063c2282f771461062a57610248565b80638da5cb5b116100ff5780638da5cb5b146105065780638f32d59b1461052a5780638fd6000414610532578063983b2d5614610558578063986502751461057e57610248565b806379cc6790146104785780637d64bcb4146104a457806382dc1ec4146104ac5780638456cb59146104d25780638aa0ddc8146104da57610248565b80633f4ba83a116101c95780635c975abb1161018d5780635c975abb146104145780636ef8d66d1461041c57806370a0823114610424578063715018a61461044a5780637696f4161461045257610248565b80633f4ba83a1461039557806340c10f191461039d57806342966c68146103c957806346fbf68e146103e65780635b4e3f3d1461040c57610248565b806323b872dd1161021057806323b872dd146102df5780632ab17c49146103155780632c1019221461033b578063355274ea14610361578063395093511461036957610248565b806305d2035b1461024d578063095ea7b31461026957806312f25343146102955780631548dbc8146102bb57806318160ddd146102c5575b600080fd5b6102556106f8565b604080519115158252519081900360200190f35b6102556004803603604081101561027f57600080fd5b506001600160a01b038135169060200135610706565b610255600480360360208110156102ab57600080fd5b50356001600160a01b0316610770565b6102c3610789565b005b6102cd610794565b60408051918252519081900360200190f35b610255600480360360608110156102f557600080fd5b506001600160a01b0381358116916020810135909116906040013561079a565b6102556004803603602081101561032b57600080fd5b50356001600160a01b0316610862565b6102c36004803603602081101561035157600080fd5b50356001600160a01b031661086d565b6102cd61088b565b6102556004803603604081101561037f57600080fd5b506001600160a01b038135169060200135610891565b6102c361092d565b610255600480360360408110156103b357600080fd5b506001600160a01b03813516906020013561098d565b6102c3600480360360208110156103df57600080fd5b50356109ca565b610255600480360360208110156103fc57600080fd5b50356001600160a01b03166109e4565b6102c36109f7565b610255610a00565b6102c3610a09565b6102cd6004803603602081101561043a57600080fd5b50356001600160a01b0316610a12565b6102c3610a2d565b6102c36004803603602081101561046857600080fd5b50356001600160a01b0316610a88565b6102c36004803603604081101561048e57600080fd5b506001600160a01b038135169060200135610aa3565b610255610ac2565b6102c3600480360360208110156104c257600080fd5b50356001600160a01b0316610b28565b6102c3610b43565b610255600480360360408110156104f057600080fd5b506001600160a01b038135169060200135610ba7565b61050e610bd9565b604080516001600160a01b039092168252519081900360200190f35b610255610be8565b6102c36004803603602081101561054857600080fd5b50356001600160a01b0316610bf9565b6102c36004803603602081101561056e57600080fd5b50356001600160a01b0316610c13565b6102c3610c2e565b6102556004803603602081101561059c57600080fd5b50356001600160a01b0316610c37565b610255600480360360408110156105c257600080fd5b506001600160a01b038135169060200135610c4a565b610255600480360360408110156105ee57600080fd5b506001600160a01b038135169060200135610c93565b6102556004803603602081101561061a57600080fd5b50356001600160a01b0316610d49565b6102556004803603602081101561064057600080fd5b50356001600160a01b0316610d5c565b6102556004803603604081101561066657600080fd5b506001600160a01b0381358116916020013516610d67565b6102c36004803603602081101561069457600080fd5b50356001600160a01b0316610e10565b6102cd600480360360408110156106ba57600080fd5b506001600160a01b0381358116916020013516610e2a565b6102c3600480360360208110156106e857600080fd5b50356001600160a01b0316610e55565b600954610100900460ff1681565b60006001600160a01b03831661071b57600080fd5b3360008181526004602090815260408083206001600160a01b0388168085529083529281902086905580518681529051929392600080516020611684833981519152929181900390910190a350600192915050565b600061078360018363ffffffff610e6f16565b92915050565b61079233610ea4565b565b60055490565b600954600090610100900460ff166107b157600080fd5b60095460ff16156107c157600080fd5b6107ca83610eec565b61080857604051600160e51b62461bcd0281526004018080602001828103825260258152602001806116386025913960400191505060405180910390fd5b61081184610eec565b61084f57604051600160e51b62461bcd02815260040180806020018281038252602781526020018061165d6027913960400191505060405180910390fd5b61085a848484610ef7565b949350505050565b600061078382610eec565b61087633610770565b61087f57600080fd5b61088881610fae565b50565b60075490565b60006001600160a01b0383166108a657600080fd5b3360009081526004602090815260408083206001600160a01b03871684529091529020546108da908363ffffffff610ff616565b3360008181526004602090815260408083206001600160a01b038916808552908352928190208590558051948552519193600080516020611684833981519152929081900390910190a350600192915050565b610936336109e4565b61093f57600080fd5b60095460ff1661094e57600080fd5b6009805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b600061099833610d49565b6109a157600080fd5b600954610100900460ff16156109b657600080fd5b6109c08383611008565b5060019392505050565b6109d2610be8565b6109db57600080fd5b6108888161102f565b600061078360088363ffffffff610e6f16565b61079233611039565b60095460ff1690565b61079233611081565b6001600160a01b031660009081526003602052604090205490565b610a35610be8565b610a3e57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610a9133610770565b610a9a57600080fd5b61088881611039565b610aab610be8565b610ab457600080fd5b610abe82826110c9565b5050565b6000610acc610be8565b610ad557600080fd5b600954610100900460ff1615610aea57600080fd5b6009805461ff0019166101001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b610b31336109e4565b610b3a57600080fd5b610888816110d3565b610b4c336109e4565b610b5557600080fd5b60095460ff1615610b6557600080fd5b6009805460ff191660011790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b6000610bb233610d49565b610bbb57600080fd5b600954610100900460ff1615610bd057600080fd5b6109b68361086d565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610c01610be8565b610c0a57600080fd5b6108888161111b565b610c1c33610d49565b610c2557600080fd5b61088881611136565b6107923361117e565b600061078360028363ffffffff610e6f16565b60006001600160a01b038316610c5f57600080fd5b3360009081526004602090815260408083206001600160a01b03871684529091529020546108da908363ffffffff6111c616565b600954600090610100900460ff16610caa57600080fd5b610cb383610eec565b610cf157604051600160e51b62461bcd0281526004018080602001828103825260258152602001806116386025913960400191505060405180910390fd5b610cfa33610eec565b610d3857604051600160e51b62461bcd02815260040180806020018281038252602781526020018061165d6027913960400191505060405180910390fd5b610d4283836111db565b9392505050565b600061078360068363ffffffff610e6f16565b600061078382610c37565b6000610d71610be8565b610d7a57600080fd5b6001600160a01b038216610d8d57600080fd5b610d9682610c37565b610da357610da38261086d565b6000610dae84610a12565b9050610dbb8484836111e4565b826001600160a01b0316846001600160a01b03167f8d517738b620ddd4757b2c72628ad2ee2e182d8eadaceb727477e0b661e0afad836040518082815260200191505060405180910390a35060019392505050565b610e18610be8565b610e2157600080fd5b610888816112b1565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610e5d610be8565b610e6657600080fd5b610888816112ba565b60006001600160a01b038216610e8457600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610eb560018263ffffffff61132816565b6040516001600160a01b038216907fe989c3ea74e8447b86355ca10e7b910a5ea9931330517c33e3002727f5e95ee890600090a250565b600061078382610d5c565b6001600160a01b0383166000908152600460209081526040808320338452909152812054610f2b908363ffffffff6111c616565b6001600160a01b0385166000908152600460209081526040808320338452909152902055610f5a8484846111e4565b6001600160a01b038416600081815260046020908152604080832033808552908352928190205481519081529051929392600080516020611684833981519152929181900390910190a35060019392505050565b610fbf60028263ffffffff61137016565b6040516001600160a01b038216907f5a85c934d044d4af54e45ef3efa70919b2301fe806a7b570e09d7e0f90a4445a90600090a250565b600082820183811015610d4257600080fd5b600061101333610d49565b61101c57600080fd5b61102683836113bc565b50600192915050565b61088833826113ec565b61104a60028263ffffffff61132816565b6040516001600160a01b038216907fbc6a411073357cff5bee0c71e7722c8fd47b5a40591adcedeaac84bd10c0736890600090a250565b61109260088263ffffffff61132816565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b610abe8282611495565b6110e460088263ffffffff61137016565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b61112433610770565b61112d57600080fd5b61088881611545565b61114760068263ffffffff61137016565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61118f60068263ffffffff61132816565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000828211156111d557600080fd5b50900390565b60006110263384845b6001600160a01b0382166111f757600080fd5b6001600160a01b038316600090815260036020526040902054611220908263ffffffff6111c616565b6001600160a01b038085166000908152600360205260408082209390935590841681522054611255908263ffffffff610ff616565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b61088881610ea4565b6001600160a01b0381166112cd57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811661133b57600080fd5b6113458282610e6f565b61134e57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b03811661138357600080fd5b61138d8282610e6f565b1561139757600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6007546113d7826113cb610794565b9063ffffffff610ff616565b11156113e257600080fd5b610abe828261158d565b6001600160a01b0382166113ff57600080fd5b600554611412908263ffffffff6111c616565b6005556001600160a01b03821660009081526003602052604090205461143e908263ffffffff6111c616565b6001600160a01b0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b03821660009081526004602090815260408083203384529091529020546114c9908263ffffffff6111c616565b6001600160a01b03831660009081526004602090815260408083203384529091529020556114f782826113ec565b6001600160a01b038216600081815260046020908152604080832033808552908352928190205481519081529051929392600080516020611684833981519152929181900390910190a35050565b61155660018263ffffffff61137016565b6040516001600160a01b038216907f6ef188d34b8fac4126790bd81059831348a92504fa4f99a97c9958a1749c63bc90600090a250565b6001600160a01b0382166115a057600080fd5b6005546115b3908263ffffffff610ff616565b6005556001600160a01b0382166000908152600360205260409020546115df908263ffffffff610ff616565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe427579696e6720696e766573746f72206973206e6f7420616c6c6f77656420746f2062757953656c6c696e6720696e766573746f72206973206e6f7420616c6c6f77656420746f2073656c6c8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a7230582063ce7125c285f2ace6ca2193d7185215cf35a8109c438b6c958bb303302b2fcc0029",
  "sourceMap": "107:399:7:-;;;411:35:4;;;-1:-1:-1;;411:35:4;;;161:57:7;5:2:-1;;;;30:1;27;20:12;5:2;161:57:7;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;161:57:7;515:6:13;:19;;-1:-1:-1;;;;;;515:19:13;524:10;515:19;;;;549:40;;161:57:7;;;;-1:-1:-1;;;;;582:6:13;;549:40;;515:6;;549:40;448:24:0;461:10;448:12;;;:24;;:::i;:::-;275:22:9;286:10;275;;;:22;;:::i;:::-;256:1:16;250:3;:7;242:16;;;;;;268:4;:10;275:22:10;286:10;275;;;;;:22;;:::i;:::-;-1:-1:-1;;352:7:11;:15;;-1:-1:-1;;352:15:11;;;107:399:7;;997:128:0;1056:23;1071:7;1056:10;:14;;;;;;:23;;;;:::i;:::-;1095:22;;-1:-1:-1;;;;;1095:22:0;;;;;;;;997:128;:::o;685:119:9:-;741:21;754:7;741:8;:12;;;;;;:21;;;;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:9;;;;;;;;685:119;:::o;::10:-;741:21;754:7;741:8;:12;;;;;;:21;;;;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:10;;;;;;;;685:119;:::o;259:181:8:-;-1:-1:-1;;;;;335:21:8;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:8;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:8;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:8;;874:30;;;;;;-1:-1:-1;;;;;;921:20:8;:11;:20;;;;;;;;;;;;;;;786:162::o;107:399:7:-;;;;;;;",
  "deployedSourceMap": "107:399:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;107:399:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;411:35:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;2735:238:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2735:238:14;;;;;;;;:::i;582:113:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;582:113:0;-1:-1:-1;;;;;582:113:0;;:::i;809:81::-;;;:::i;:::-;;936:89:14;;;:::i;:::-;;;;;;;;;;;;;;;;2163:395:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2163:395:4;;;;;;;;;;;;;;;;;:::i;222:138:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;222:138:7;-1:-1:-1;;;;;222:138:7;;:::i;800:100:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;800:100:1;-1:-1:-1;;;;;800:100:1;;:::i;353:73:16:-;;;:::i;4233:317:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:14;;;;;;;;:::i;1176:115:11:-;;;:::i;1552:141:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1552:141:4;;;;;;;;:::i;3139:80::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3139:80:4;;:::i;395:107:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:10;-1:-1:-1;;;;;395:107:10;;:::i;1022:83:1:-;;;:::i;460:76:11:-;;;:::i;604:75:10:-;;;:::i;1234:104:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:14;-1:-1:-1;;;;;1234:104:14;;:::i;1347:137:13:-;;;:::i;908:106:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;908:106:1;-1:-1:-1;;;;;908:106:1;;:::i;3471:108:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3471:108:4;;;;;;;;:::i;1398:148::-;;;:::i;508:90:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:10;-1:-1:-1;;;;;508:90:10;;:::i;973:113:11:-;;;:::i;1699:183:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1699:183:4;;;;;;;;:::i;659:77:13:-;;;:::i;:::-;;;;-1:-1:-1;;;;;659:77:13;;;;;;;;;;;;;;979:90;;;:::i;308:93:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;308:93:5;-1:-1:-1;;;;;308:93:5;;:::i;508:90:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:9;-1:-1:-1;;;;;508:90:9;;:::i;604:75::-;;;:::i;677:115:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;677:115:1;-1:-1:-1;;;;;677:115:1;;:::i;5058:327:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:14;;;;;;;;:::i;2722:294:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2722:294:4;;;;;;;;:::i;395:107:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:9;-1:-1:-1;;;;;395:107:9;;:::i;710:214:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;710:214:5;-1:-1:-1;;;;;710:214:5;;:::i;3809:336:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3809:336:4;;;;;;;;;;:::i;483:99:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;483:99:5;-1:-1:-1;;;;;483:99:5;;:::i;1669:129:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1669:129:14;;;;;;;;;;:::i;1655:107:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:13;-1:-1:-1;;;;;1655:107:13;;:::i;411:35:4:-;;;;;;;;;:::o;2735:238:14:-;2800:4;-1:-1:-1;;;;;2824:21:14;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:14;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;-1:-1:-1;;;;;;;;;;;2909:36:14;;;;;;;;;;-1:-1:-1;2962:4:14;2735:238;;;;:::o;582:113:0:-;640:4;664:23;:10;679:7;664:23;:14;:23;:::i;:::-;657:30;582:113;-1:-1:-1;;582:113:0:o;809:81::-;855:27;871:10;855:15;:27::i;:::-;809:81::o;936:89:14:-;1006:12;;936:89;:::o;2163:395:4:-;669:15;;2330:4;;669:15;;;;;661:24;;;;;;689:7:11;;;;688:8;680:17;;;;;;2358:18:4;2373:2;2358:14;:18::i;:::-;2350:68;;;;-1:-1:-1;;;;;2350:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2436:21;2452:4;2436:15;:21::i;:::-;2428:73;;;;-1:-1:-1;;;;;2428:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:33;2537:4;2542:2;2545:5;2518:18;:33::i;:::-;2511:40;2163:395;-1:-1:-1;;;;2163:395:4:o;222:138:7:-;299:4;317:38;338:16;317:20;:38::i;800:100:1:-;531:22:0;542:10;531;:22::i;:::-;523:31;;;;;;870:22:1;884:7;870:13;:22::i;:::-;800:100;:::o;353:73:16:-;415:4;;353:73;:::o;4233:317:14:-;4313:4;-1:-1:-1;;;;;4337:21:14;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:14;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:14;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;-1:-1:-1;;;;;;;;;;;4462:60:14;;;;;;;;;;-1:-1:-1;4539:4:14;4233:317;;;;:::o;1176:115:11:-;350:20:10;359:10;350:8;:20::i;:::-;342:29;;;;;;860:7:11;;;;852:16;;;;;;1234:7;:15;;-1:-1:-1;;1234:15:11;;;1264:20;;;1273:10;1264:20;;;;;;;;;;;;;1176:115::o;1552:141:4:-;1628:4;350:20:9;359:10;350:8;:20::i;:::-;342:29;;;;;;592:15:4;;;;;;;591:16;583:25;;;;;;1644:21;1655:2;1659:5;1644:10;:21::i;:::-;-1:-1:-1;1682:4:4;;1552:141;-1:-1:-1;;;1552:141:4:o;3139:80::-;863:9:13;:7;:9::i;:::-;855:18;;;;;;3195:17:4;3206:5;3195:10;:17::i;395:107:10:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;1022:83:1:-;1069:28;1086:10;1069:16;:28::i;460:76:11:-;522:7;;;;460:76;:::o;604:75:10:-;647:25;661:10;647:13;:25::i;1234:104:14:-;-1:-1:-1;;;;;1315:16:14;1289:7;1315:16;;;:9;:16;;;;;;;1234:104::o;1347:137:13:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:13;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:13;;;1347:137::o;908:106:1:-;531:22:0;542:10;531;:22::i;:::-;523:31;;;;;;981:25:1;998:7;981:16;:25::i;3471:108:4:-;863:9:13;:7;:9::i;:::-;855:18;;;;;;3545:27:4;3560:4;3566:5;3545:14;:27::i;:::-;3471:108;;:::o;1398:148::-;1457:4;863:9:13;:7;:9::i;:::-;855:18;;;;;;592:15:4;;;;;;;591:16;583:25;;;;;;1471:15;:22;;-1:-1:-1;;1471:22:4;;;;;1506:14;;;;1471:22;;1506:14;-1:-1:-1;1535:4:4;1398:148;:::o;508:90:10:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;973:113:11:-;350:20:10;359:10;350:8;:20::i;:::-;342:29;;;;;;689:7:11;;;;688:8;680:17;;;;;;1032:7;:14;;-1:-1:-1;;1032:14:11;1042:4;1032:14;;;1061:18;;;1068:10;1061:18;;;;;;;;;;;;;973:113::o;1699:183:4:-;1785:4;350:20:9;359:10;350:8;:20::i;:::-;342:29;;;;;;592:15:4;;;;;;;591:16;583:25;;;;;;1801:22;1820:2;1801:18;:22::i;659:77:13:-;697:7;723:6;-1:-1:-1;;;;;723:6:13;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:13;1042:10;:20;;979:90::o;308:93:5:-;863:9:13;:7;:9::i;:::-;855:18;;;;;;370:26:5;388:7;370:17;:26::i;508:90:9:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;604:75::-;647:25;661:10;647:13;:25::i;677:115:1:-;736:4;760:24;:11;776:7;760:24;:15;:24;:::i;5058:327:14:-;5143:4;-1:-1:-1;;;;;5167:21:14;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:14;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;2722:294:4:-;669:15;;2795:4;;669:15;;;;;661:24;;;;;;2819:18;2834:2;2819:14;:18::i;:::-;2811:68;;;;-1:-1:-1;;;;;2811:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:27;2913:10;2897:15;:27::i;:::-;2889:79;;;;-1:-1:-1;;;;;2889:79:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2985:24;3000:2;3003:5;2985:14;:24::i;:::-;2978:31;2722:294;-1:-1:-1;;;2722:294:4:o;395:107:9:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;710:214:5:-;780:4;799:28;811:15;799:11;:28::i;3809:336:4:-;3884:4;863:9:13;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;3912:16:4;;3904:25;;;;;;3944:15;3956:2;3944:11;:15::i;:::-;3940:60;;3973:16;3986:2;3973:12;:16::i;:::-;4010:13;4026:15;4036:4;4026:9;:15::i;:::-;4010:31;;4051:26;4061:4;4067:2;4071:5;4051:9;:26::i;:::-;4107:2;-1:-1:-1;;;;;4093:24:4;4101:4;-1:-1:-1;;;;;4093:24:4;;4111:5;4093:24;;;;;;;;;;;;;;;;;;-1:-1:-1;4134:4:4;;3809:336;-1:-1:-1;;;3809:336:4:o;483:99:5:-;863:9:13;:7;:9::i;:::-;855:18;;;;;;548:29:5;569:7;548:20;:29::i;1669:129:14:-;-1:-1:-1;;;;;1767:15:14;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;1655:107:13:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;786:162:8:-;858:4;-1:-1:-1;;;;;882:21:8;;874:30;;;;;;-1:-1:-1;;;;;;921:20:8;:11;:20;;;;;;;;;;;;;;;786:162::o;1133:136:0:-;1195:26;:10;1213:7;1195:26;:17;:26;:::i;:::-;1237:24;;-1:-1:-1;;;;;1237:24:0;;;;;;;;1133:136;:::o;890:131:4:-;963:4;983:31;998:15;983:14;:31::i;3436:294:14:-;-1:-1:-1;;;;;3560:14:14;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:14;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:14;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;-1:-1:-1;;;;;;;;;;;3648:54:14;;;;;;;;;;-1:-1:-1;3719:4:14;3436:294;;;;;:::o;1113:131:1:-;1173:24;:11;1189:7;1173:24;:15;:24;:::i;:::-;1213:23;;-1:-1:-1;;;;;1213:23:1;;;;;;;;1113:131;:::o;1431:145:12:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;443:128:18;511:4;350:20:9;359:10;350:8;:20::i;:::-;342:29;;;;;;527:16:18;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:18;443:128;;;;:::o;295:77:15:-;341:24;347:10;359:5;341;:24::i;1252:139:1:-;1315:27;:11;1334:7;1315:27;:18;:27;:::i;:::-;1358:25;;-1:-1:-1;;;;;1358:25:1;;;;;;;;1252:139;:::o;810:127:10:-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:10;;;;;;;;810:127;:::o;624:93:15:-;688:22;698:4;704:5;688:9;:22::i;685:119:10:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:10;;;;;;;;685:119;:::o;703:98:0:-;531:22;542:10;531;:22::i;:::-;523:31;;;;;;772:21;785:7;772:12;:21::i;685:119:9:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:9;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:9;;;;;;;;810:127;:::o;1205:145:12:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:12;;;1205:145::o;1962:137:14:-;2023:4;2039:32;2049:10;2061:2;2065:5;5599:256;-1:-1:-1;;;;;5686:16:14;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:14;;;;;;:9;:15;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:14;;;;;;;:9;:15;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:14;;;;;;;:9;:13;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o;898:91:0:-;957:24;973:7;957:15;:24::i;1906:183:13:-;-1:-1:-1;;;;;1979:22:13;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:13;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:13;-1:-1:-1;;;;;2065:17:13;;;;;;;;;;1906:183::o;514:184:8:-;-1:-1:-1;;;;;593:21:8;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:8;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:8;;;514:184::o;259:181::-;-1:-1:-1;;;;;335:21:8;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:8;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:8;429:4;406:27;;;259:181::o;432:151:16:-;534:4;;506:24;524:5;506:13;:11;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;:32;;498:41;;;;;;549:27;561:7;570:5;549:11;:27::i;6687:263:14:-;-1:-1:-1;;;;;6761:21:14;;6753:30;;;;;;6809:12;;:23;;6826:5;6809:23;:16;:23;:::i;:::-;6794:12;:38;-1:-1:-1;;;;;6863:18:14;;;;;;:9;:18;;;;;;:29;;6886:5;6863:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6842:18:14;;;;;;:9;:18;;;;;;;;:50;;;;6907:36;;;;;;;6842:18;;6907:36;;;;;;;;;;;6687:263;;:::o;7339:255::-;-1:-1:-1;;;;;7441:17:14;;;;;;:8;:17;;;;;;;;7459:10;7441:29;;;;;;;;:40;;7475:5;7441:40;:33;:40;:::i;:::-;-1:-1:-1;;;;;7409:17:14;;;;;;:8;:17;;;;;;;;7427:10;7409:29;;;;;;;:72;7491:21;7418:7;7506:5;7491;:21::i;:::-;-1:-1:-1;;;;;7527:60:14;;7557:17;;;;:8;:17;;;;;;;;7545:10;7557:29;;;;;;;;;;;7527:60;;;;;;;7545:10;;7527:60;-1:-1:-1;;;;;;;;;;;7527:60:14;;;;;;;;;;7339:255;;:::o;997:128:0:-;1056:23;:10;1071:7;1056:23;:14;:23;:::i;:::-;1095:22;;-1:-1:-1;;;;;1095:22:0;;;;;;;;997:128;:::o;6198:263:14:-;-1:-1:-1;;;;;6272:21:14;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:23;:16;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:14;;;;;;:9;:18;;;;;;:29;;6397:5;6374:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:14;;;;;;:9;:18;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;;;6418:36;;;;;;;;;;6198:263;;:::o",
  "source": "pragma solidity ^0.5.7;\n\nimport \"../WhiteListToken.sol\";\n\n/**\n * A testable version for WhiteListToken\n */\ncontract WhiteListTokenTestable is WhiteListToken{\n\n  constructor(uint256 cap) WhiteListToken(cap) public {\n  }\n\n  function test_canInvestorBuy(address _investorAddress)  public view returns (bool){\n    return super.canInvestorBuy(_investorAddress);\n  }\n\n  function test_canInvestorSell(address _investorAddress) public view returns (bool){\n    return super.canInvestorSell(_investorAddress);\n  }\n\n}\n",
  "sourcePath": "C:/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/testables/WhiteListTokenTestable.sol",
  "ast": {
    "absolutePath": "/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/testables/WhiteListTokenTestable.sol",
    "exportedSymbols": {
      "WhiteListTokenTestable": [
        741
      ]
    },
    "id": 742,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 702,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/WhiteListToken.sol",
        "file": "../WhiteListToken.sol",
        "id": 703,
        "nodeType": "ImportDirective",
        "scope": 742,
        "sourceUnit": 608,
        "src": "25:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 704,
              "name": "WhiteListToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 607,
              "src": "142:14:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhiteListToken_$607",
                "typeString": "contract WhiteListToken"
              }
            },
            "id": 705,
            "nodeType": "InheritanceSpecifier",
            "src": "142:14:7"
          }
        ],
        "contractDependencies": [
          112,
          221,
          607,
          656,
          938,
          1041,
          1124,
          1361,
          1793,
          1824,
          1881,
          1967,
          2036
        ],
        "contractKind": "contract",
        "documentation": "A testable version for WhiteListToken",
        "fullyImplemented": true,
        "id": 741,
        "linearizedBaseContracts": [
          741,
          607,
          1124,
          1041,
          1824,
          1881,
          1967,
          938,
          1793,
          2036,
          656,
          221,
          112,
          1361
        ],
        "name": "WhiteListTokenTestable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 713,
              "nodeType": "Block",
              "src": "213:5:7",
              "statements": []
            },
            "documentation": null,
            "id": 714,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 710,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 707,
                    "src": "201:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 711,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 709,
                  "name": "WhiteListToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 607,
                  "src": "186:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_WhiteListToken_$607_$",
                    "typeString": "type(contract WhiteListToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "186:19:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 714,
                  "src": "173:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "173:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "172:13:7"
            },
            "returnParameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:7"
            },
            "scope": 741,
            "src": "161:57:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "304:56:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 723,
                        "name": "_investorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "338:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 721,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2104,
                        "src": "317:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_WhiteListTokenTestable_$741",
                          "typeString": "contract super WhiteListTokenTestable"
                        }
                      },
                      "id": 722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "canInvestorBuy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 372,
                      "src": "317:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "317:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 720,
                  "id": 725,
                  "nodeType": "Return",
                  "src": "310:45:7"
                }
              ]
            },
            "documentation": null,
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_canInvestorBuy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "name": "_investorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "251:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "250:26:7"
            },
            "returnParameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "299:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "298:6:7"
            },
            "scope": 741,
            "src": "222:138:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 739,
              "nodeType": "Block",
              "src": "446:57:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 736,
                        "name": "_investorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "481:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 734,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2104,
                        "src": "459:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_WhiteListTokenTestable_$741",
                          "typeString": "contract super WhiteListTokenTestable"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "canInvestorSell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 384,
                      "src": "459:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "459:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 733,
                  "id": 738,
                  "nodeType": "Return",
                  "src": "452:46:7"
                }
              ]
            },
            "documentation": null,
            "id": 740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_canInvestorSell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "name": "_investorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "394:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "393:26:7"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 732,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "441:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "440:6:7"
            },
            "scope": 741,
            "src": "364:139:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 742,
        "src": "107:399:7"
      }
    ],
    "src": "0:507:7"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/testables/WhiteListTokenTestable.sol",
    "exportedSymbols": {
      "WhiteListTokenTestable": [
        741
      ]
    },
    "id": 742,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 702,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "/C/Users/Noam/BCS/stellero/Dev/StellerroToken/contracts/WhiteListToken.sol",
        "file": "../WhiteListToken.sol",
        "id": 703,
        "nodeType": "ImportDirective",
        "scope": 742,
        "sourceUnit": 608,
        "src": "25:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 704,
              "name": "WhiteListToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 607,
              "src": "142:14:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhiteListToken_$607",
                "typeString": "contract WhiteListToken"
              }
            },
            "id": 705,
            "nodeType": "InheritanceSpecifier",
            "src": "142:14:7"
          }
        ],
        "contractDependencies": [
          112,
          221,
          607,
          656,
          938,
          1041,
          1124,
          1361,
          1793,
          1824,
          1881,
          1967,
          2036
        ],
        "contractKind": "contract",
        "documentation": "A testable version for WhiteListToken",
        "fullyImplemented": true,
        "id": 741,
        "linearizedBaseContracts": [
          741,
          607,
          1124,
          1041,
          1824,
          1881,
          1967,
          938,
          1793,
          2036,
          656,
          221,
          112,
          1361
        ],
        "name": "WhiteListTokenTestable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 713,
              "nodeType": "Block",
              "src": "213:5:7",
              "statements": []
            },
            "documentation": null,
            "id": 714,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 710,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 707,
                    "src": "201:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 711,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 709,
                  "name": "WhiteListToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 607,
                  "src": "186:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_WhiteListToken_$607_$",
                    "typeString": "type(contract WhiteListToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "186:19:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 714,
                  "src": "173:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "173:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "172:13:7"
            },
            "returnParameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:7"
            },
            "scope": 741,
            "src": "161:57:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "304:56:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 723,
                        "name": "_investorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "338:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 721,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2104,
                        "src": "317:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_WhiteListTokenTestable_$741",
                          "typeString": "contract super WhiteListTokenTestable"
                        }
                      },
                      "id": 722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "canInvestorBuy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 372,
                      "src": "317:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "317:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 720,
                  "id": 725,
                  "nodeType": "Return",
                  "src": "310:45:7"
                }
              ]
            },
            "documentation": null,
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_canInvestorBuy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "name": "_investorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "251:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "250:26:7"
            },
            "returnParameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "299:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "298:6:7"
            },
            "scope": 741,
            "src": "222:138:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 739,
              "nodeType": "Block",
              "src": "446:57:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 736,
                        "name": "_investorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "481:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 734,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2104,
                        "src": "459:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_WhiteListTokenTestable_$741",
                          "typeString": "contract super WhiteListTokenTestable"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "canInvestorSell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 384,
                      "src": "459:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "459:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 733,
                  "id": 738,
                  "nodeType": "Return",
                  "src": "452:46:7"
                }
              ]
            },
            "documentation": null,
            "id": 740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_canInvestorSell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "name": "_investorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "394:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "393:26:7"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 732,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "441:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "440:6:7"
            },
            "scope": 741,
            "src": "364:139:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 742,
        "src": "107:399:7"
      }
    ],
    "src": "0:507:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-01T13:17:31.984Z",
  "devdoc": {
    "methods": {
      "addKYCAdmin(address)": {
        "params": {
          "account": "the address to add"
        }
      },
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "cap()": {
        "return": "the cap for the token minting."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "finishMinting()": {
        "details": "Function to stop minting new tokens.",
        "return": "True if the operation was successful."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isFreeInvestor(address)": {
        "params": {
          "investorAddress": "the investor address"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "removeKYCAdmin(address)": {
        "params": {
          "account": "the address to remove"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "restoreTokens(address,address)": {
        "details": "restore tokens from one address to another. to use only in case a user cannot access its token.",
        "params": {
          "from": "address The old user's address",
          "to": "address The new user's address"
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    }
  },
  "userdoc": {
    "methods": {
      "addKYCAdmin(address)": {
        "notice": "Add a kyc admin"
      },
      "isFreeInvestor(address)": {
        "notice": "Check if the investor is KYC approved and also accredited"
      },
      "removeKYCAdmin(address)": {
        "notice": "Remove a kyc admin"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "notice": "A testable version for WhiteListToken"
  }
}